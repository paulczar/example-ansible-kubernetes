apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
---
apiVersion: v1
kind: Secret
metadata:
  name: external-dns
data:
  key.json: "{{ _credentials_json['content'] }}"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: external-dns
rules:
- apiGroups: [""]
  resources: ["services","endpoints","pods"]
  verbs: ["get","watch","list"]
- apiGroups: ["extensions","networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: {{ external_dns.namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: k8s.gcr.io/external-dns/external-dns:v0.7.3
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/secrets/key.json
        args:
        - --source=ingress
        - --source=service
        - --domain-filter={{ external_dns.domain }}
        - --provider=google
        - --google-project={{ external_dns.google.project_id }}
        - --registry=txt
        - --txt-owner-id=my-identifier
        volumeMounts:
          - name: secret-volume
            readOnly: true
            mountPath: "/etc/secrets"
      volumes:
        - name: secret-volume
          secret:
            secretName: external-dns
